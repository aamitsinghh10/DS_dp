class Solution {
public:
  bool isPalindrome(string &s, int i, int j) 
  {      
        while(i<j)
        {    
            if(s[i]!=s[j]) 
                return false; 
            i+=1;
            j-=1;
            
        }
        return true;
    }
     int solve(string &s, int l, int r,vector<vector<int>> &mem) {
        
        if(mem[l][r]!=-1) 
            return mem[l][r];
        
        if(l>=r) 
            return mem[l][r]=0;
        
        if(isPalindrome(s,l,r)== true)
            return mem[l][r]=0;
        
        int ans=INT_MAX;
        
        for(int k=l;k<r;k++) 
        {
            if(isPalindrome(s,l,k)==true)// check if this condition is true than further other condition is valid
            {
                int temp=solve(s,l,k,mem)+solve(s,k+1,r,mem)+1;
            
                if(temp<ans) 
                    ans=temp;
            }
        }
        return mem[l][r]=ans;
        
    }
    int minCut(string s) 
    {
        vector<vector<int>> mem(s.size()+1, vector<int>(s.size()+1,-1));
        
        return solve(s,0,s.length()-1,mem);
    }
};
