class Solution {
public:
    vector<int> largestDivisibleSubset(vector<int>& nums) 
    {
        vector<int> ans;
        vector<int> lis(nums.size(),1);//lis array
        int max=1;
        
        sort(nums.begin(),nums.end());
        
        for(int i=1;i<nums.size();i++)
        {
            for(int j=0;j<i;j++)
            {
                if((nums[i]%nums[j])==0 && lis[i]<1+lis[j])
                {
                    lis[i]=1+lis[j];
                    
                    if(max<lis[i])
                        max=lis[i];
                }
            }
        }
        int prev=-1;
        
        for(int i=nums.size()-1;i>=0;i--)
        {
            if(lis[i]==max  && (prev%nums[i]==0 or prev==-1))
            {
                ans.push_back(nums[i]);
                max-=1;
                prev=nums[i];
            }
        }
        return ans;
    }
};
