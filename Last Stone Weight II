class Solution {
public:
    int lastStoneWeightII(vector<int>& stones)// Similar as minimum subset sum difference
    {
        int n=stones.size();
        int sum=0; 
        
        for(int i=0;i<n;i++)
            sum+=stones[i];
     
        bool dp[n+1][sum+1];
     
        for(int i=0;i<=n;i++)// first col is true because zero sum as possible from all elements
            dp[i][0]=true;
     
        for(int i=1;i<=sum;i++)// first row is false except dp[0][0] as only this is possible
            dp[0][i]=false;
     
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=sum;j++)
            {
                if(stones[i-1]>j)
                    dp[i][j]=dp[i-1][j];
                else
                    dp[i][j]=dp[i-1][j-stones[i-1]] || dp[i-1][j];
             }
        }
       
        int diff = INT_MAX;// here we calculate the diff b/w two subsets
         
        for (int i=sum/2;i>=0;i--)
        {
            if (dp[n][i]==true)
            {
              diff=min(diff,sum-2*i);
            }
        }
         return diff;
    }
};
