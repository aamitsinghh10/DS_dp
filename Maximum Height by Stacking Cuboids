class Solution {
public:
    int maxHeight(vector<vector<int>>& cuboids) 
    {   
        int n=cuboids.size();
        int ans=0;//for storing maximum height
        for(auto & c:cuboids)// sort all the sides of the cuboid
        {
            sort(c.begin(),c.end());
        }
        
        sort(cuboids.begin(),cuboids.end());//sort cuboids by their any side
        
        vector<int> lis(n,0);//creating an lis array and initially fill it with 0
        
        for(int i=0;i<n;i++)
        {
            lis[i]=cuboids[i][2];// filling the lis array with their heights
            
            for(int j=0;j<i;j++)
            {
                if(cuboids[j][0]<=cuboids[i][0] && 
                   cuboids[j][1]<=cuboids[i][1] && 
                   cuboids[j][2]<=cuboids[i][2])// basic conditions given in question
                {
                   lis[i]= max(lis[i],lis[j]+cuboids[i][2]);//checking of maximum height
                }
            }
            ans=max(ans,lis[i]);// getting maximum height
        }
        return ans;
    }
};
